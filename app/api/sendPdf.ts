require('dotenv').config();

import type { NextApiRequest, NextApiResponse } from 'next';
const nodemailer = require('nodemailer');
import path from 'path';


export default async function sendPdf(req: NextApiRequest, res: NextApiResponse) {
	const { email } = req.body;

	const transporter = nodemailer.createTransport({
		host: 'smtp.your-email-provider.com', // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à SMTP —Å–µ—Ä–≤–µ—Ä
		port: 587, // –∏–ª–∏ 465 (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–∞—à–µ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞)
		secure: false, // true –¥–ª—è –ø–æ—Ä—Ç–∞ 465, false –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ—Ä—Ç–æ–≤
		auth: {
			user: process.env.EMAIL_USER,
			pass: process.env.EMAIL_PASS,
		},
		tls: {
			// –î–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è —Å–ª–µ–¥—É—é—â–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
			rejectUnauthorized: false
		}
	});

	const pdfPath = path.join(process.cwd(), 'public', 'files', 'wiki.pdf');

	transporter.sendMail({
		from: process.env.EMAIL_USER,
		to: email,
		subject: 'France Experience FAQ üß°',
		text: '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ. –ú—ã —Ü–µ–Ω–∏–º –≤–∞—à–µ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –ø–æ–ª—É—á–∏—Ç—å –º–∞–∫—Å–∏–º—É–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö. –í –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã üôÇ. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–¥–∞—Ç—å –Ω–∞–º –≤–æ–ø—Ä–æ—Å –Ω–∞–ø—Ä—è–º—É—é, –≤—ã –º–æ–∂–µ—Ç–µ –æ–≤–µ—Ç–∏—Ç—å –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ª–∏–±–æ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –≤ Telegram.',
		attachments: [{
			filename: 'wiki.pdf',
			path: pdfPath,
		}],
	}, (error, info) => {
		if (error) {
			console.error(error);
			res.status(500).json({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ email' });
			return;
		}
		res.status(200).json({ message: 'Email —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω' });
	});
}
